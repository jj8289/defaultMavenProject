<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.jj.company.dao.CompanyDAO">
	
	<select id="selectSdList" resultType="AddrVO">
		SELECT	ROW_NUMBER() OVER (ORDER BY SD_NM ) AS ROWNUM
				, SD_NM
		  FROM	TB_ADDR
	      GROUP BY SD_NM
	</select>
	
	<select id="selectSgList" parameterType="AddrDTO" resultType="AddrVO">
		SELECT  ADDR_NO
				, SG_NM
		  FROM  TB_ADDR
		 WHERE  SD_NM LIKE '%${sdNm}%' 
		 GROUP BY SG_NM, SD_NM 
	</select>
	
	<select id="selectDnList" parameterType="AddrDTO" resultType="AddrVO">
		SELECT  ADDR_NO
				, DN_NM
		  FROM  TB_ADDR
		 WHERE  SG_NM LIKE '%${sgNm}%'
	</select>
	 
 	<select id="selectCompanyCountByManagerId" parameterType="CompanyVO" resultType="int">
		SELECT COUNT(*)
		  FROM TB_COMPANY
		 WHERE MANAGER_ID = #{managerId}
	</select>

	<select id="selectCompany" parameterType="CompanyVO" resultType="int">
		SELECT COUNT(*)
		  FROM TB_COMPANY
		 WHERE BUSINESS_NUM = #{businessNum}
	</select> 
	
	<select id="selectCompanyByManagerId" parameterType="CompanyVO" resultType="CompanyVO">
		SELECT *
		  FROM TB_COMPANY
		 WHERE MANAGER_ID = #{managerId}
	</select>
	
	<select id="selectManager" parameterType="CompanyVO" resultType="CompanyVO">
		SELECT *
		  FROM TB_COMPANY
		 WHERE MANAGER_ID = #{managerId}
		   AND MANAGER_PW = #{managerPw}
	</select>
	
	<select id="selectRegister" parameterType="CompanyVO" resultType="RegisterVO">
		 SELECT  @RN2 := @RN2 + 1 AS ROW_NUM2
		        , C.*
		   FROM  (
					 SELECT  @RN := @RN + 1 AS ROW_NUM
					  	   , @RN2 := 0	
					       , B.*
					   FROM	(SELECT @RN := 0, A.*
						  	   FROM TB_REGISTER A
						 	  WHERE COMPANY_NO = #{companyNo}
						 	  ORDER BY CREATE_DATE DESC) B 
				 ) C
		   LIMIT #{offset}, #{pageSize}		 
	</select>
	
	<insert id="insertCompany" parameterType="CompanyVO">
 		INSERT INTO TB_COMPANY
 		(
			  COMPANY_NM
			, MANAGER_ID
			, MANAGER_PW
			, MANAGER_NM
			, PHONE
			, ADDR
			, TEL
			, EMAIL
			, KIND
			, INTRO
			, SIDO
			, SIGUNGU
			, DONG
			, LAT
			, LOGT
			, BUSINESS_NUM
			, CREATE_DATE
 		) 
 		VALUES
 		(
			  #{companyNm}
			, #{managerId}
			, #{managerPw}
			, #{managerNm}
			, #{phone}
			, #{addr}
			, #{tel} 
			, #{email}
			, #{kind}
			, #{intro}
			, #{sido}
			, #{sigungu}
			, #{dong}
			, #{lat}
			, #{logt}
			, #{businessNum} 
			, NOW()
 		) 
 	</insert> 
	 
	<insert id="insertRegister" parameterType="RegisterVO">
		INSERT INTO TB_REGISTER
		(
			  COMPANY_NO
			, SALARY_HOUR
			, SALARY_DAY
			, WORK_TYPE
			, WORK_DATE
			, WORK_START
			, WORK_DOW
			, TIME_FLAG
			, WORK_ST_TIME
			, WORK_EN_TIME
			, JOB
			, SEX
			, AGE
			, CAREER
			, CREATE_DATE
			, LUNCH_ST_TIME
			, LUNCH_EN_TIME
			, WORK_FLAG
			, WORK
			, DETAIL_WORK
			, WORK_PT
			, DETAIL_WORK_PT
			, INSEN_FLAG
			, PEER_CNT
			, AVG_CNT
			, ETC
			, CAL_WORK_TIME
			, CAL_SALARY_HOUR
			, CAL_SALARY_DAY	
			, MATCH_PHONE
			, HIRE_FLAG
			, MATCH_WORK_DATE
			, MATCH_INTERVIEW_DATE
			, MATCH_MSG
		) 
		VALUES
		(
			  #{companyNo}
			, #{salaryHour}
			, #{salaryDay}
			, #{workType} 
			, #{workDate}
			, #{workStart}
			, #{workDow}
			, #{timeFlag}
			, #{workStTime}
			, #{workEnTime}
			, #{job}
			, #{sex}
			, #{age}
			, #{career}
			, NOW()
			, #{lunchStTime}
			, #{lunchEnTime}
			, #{workFlag}
			, #{work}
			, #{detailWork}
			, #{workPt}
			, #{detailWorkPt}
			, #{insenFlag}
			, #{peerCnt}
			, #{avgCnt}
			, #{etc} 
			, #{calWorkTime}
			, #{calSalaryHour}
			, #{calSalaryDay}
			, #{matchPhone}
			, #{hireFlag}
			, #{matchWorkDate}
			, #{matchInterviewDate}
			, #{matchMsg}
		)
	</insert> 
	 
	<select id="selectRegCnt" parameterType="RegisterVO" resultType="int">
		SELECT  COUNT(*)
		  FROM  TB_REGISTER
		 WHERE  COMPANY_NO = #{companyNo}
		 <if test="job == 'PT'">
		   AND  JOB = #{job}
		   AND  WORK_FLAG = #{workFlag}
		 </if>
		 <if test="job != 'PT'">
		   AND  JOB = #{job}
		 </if>
	</select> 
	 
	 
	<select id="selectRegTotCnt" parameterType="CompanyVO" resultType="int">
		SELECT COUNT(*)
		  FROM TB_REGISTER
		 WHERE COMPANY_NO = #{companyNo}
	</select> 
	
	<select id="selectRegByRegNo" parameterType="RegisterVO" resultType="RegisterVO">
		SELECT *
		  FROM TB_REGISTER
		 WHERE REG_NO = #{regNo}
	</select>
	
	<update id="updateRegister" parameterType="RegisterVO">
		UPDATE    TB_REGISTER 
		   SET    SALARY_HOUR   = #{salaryHour}
				, SALARY_DAY    = #{salaryDay}
				, WORK_TYPE     = #{workType} 
				, WORK_DATE     = #{workDate}
				, WORK_START    = #{workStart}
				, WORK_DOW      = #{workDow}
				, TIME_FLAG     = #{timeFlag}
				, WORK_ST_TIME  = #{workStTime}
				, WORK_EN_TIME  = #{workEnTime}
				, JOB           = #{job}
				, SEX           = #{sex}
				, AGE           = #{age}
				, CAREER        = #{career}
				, CREATE_DATE   = NOW()
				, LUNCH_ST_TIME = #{lunchStTime}
				, LUNCH_EN_TIME = #{lunchEnTime}
				, WORK_FLAG     = #{workFlag}
				, WORK          = #{work}
				, DETAIL_WORK   = #{detailWork}
				, WORK_PT       = #{workPt}
				, DETAIL_WORK_PT= #{detailWorkPt}
				, INSEN_FLAG    = #{insenFlag}
				, PEER_CNT      = #{peerCnt}
				, AVG_CNT       = #{avgCnt}
				, ETC           = #{etc} 
				, CAL_WORK_TIME = #{calWorkTime}
				, CAL_SALARY_HOUR = #{calSalaryHour}
				, CAL_SALARY_DAY = #{calSalaryDay} 
				, MATCH_PHONE = #{matchPhone}
				, HIRE_FLAG = #{hireFlag}
				, MATCH_WORK_DATE = #{matchWorkDate}
				, MATCH_INTERVIEW_DATE = #{matchInterviewDate}
				, MATCH_MSG = #{matchMsg}
		 WHERE    REG_NO = #{regNo}
	</update> 
	
	<update id="updateCompany" parameterType="CompanyVO">
 		UPDATE  TB_COMPANY
 		   SET   ADDR = #{addr}
 		       , EMAIL = #{email}
 		       , INTRO = #{intro}
 		       , BUSINESS_NUM = #{businessNum}
 		 WHERE  COMPANY_NO = #{companyNo}
 	</update>
	
	<!-- <select id="selectSgList" parameterType="AddrDTO" resultType="">
		SELECT  A.ROWNUM
				, A.SG_NM
		FROM (SELECT  ROW_NUMBER() OVER (ORDER BY SD_NM, SG_NM ) AS ROWNUM
				      , SD_NM
				      , SG_NM 
				FROM  TB_ADDR
			   GROUP BY SD_NM, SG_NM
			 ) A
		<if test="sdNm == '1'">
			WHERE SD_NM LIKE '%${sdNm}%'
		</if>
	</select>
	<select id="selectDnList" parameterType="AddrDTO" resultType="">
		SELECT  A.ROWNUM
				, A.DN_NM
		FROM (SELECT  ROW_NUMBER() OVER (ORDER BY SD_NM, SG_NM ) AS ROWNUM
				      , SD_NM
				      , SG_NM
				      , DN_NM 
				FROM  TB_ADDR
			   GROUP BY SD_NM, SG_NM, DN_NM
			 ) A
		<if test="sdNm == '1' and sgNm == '1'">
			WHERE  SD_NM LIKE '%${sdNm}%'
			  AND  SG_NM LIKE '%${sgNm}%'
		</if>
	</select>   -->
</mapper> 
